version: '3.8'

services:
  grafana:
    image: grafana/grafana:latest
    container_name: monitoring-grafana-${BRANCH:-main}
    ports:
      - "${GRAFANA_PORT:-8107}:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=monitoring2024
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=https://grafana-deployment-monitoring.silverhawk77.click
      - GF_SERVER_SERVE_FROM_SUB_PATH=false
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana-config/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - ./grafana-config/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./grafana-config/dashboards:/etc/grafana/dashboards
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: monitoring-prometheus-${BRANCH:-main}
    ports:
      - "${METRICS_PORT:-8106}:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: monitoring-nginx-${BRANCH:-main}
    ports:
      - "${MAIN_PORT:-8108}:80"
    volumes:
      - ./nginx-monitoring.conf:/etc/nginx/nginx.conf
      - ./static:/usr/share/nginx/html
    depends_on:
      - grafana
      - prometheus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 3s
      retries: 3
    restart: unless-stopped

volumes:
  grafana-data:
  prometheus-data: